// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc103.Cyber103.subsystems;

import org.usfirst.frc103.Cyber103.Robot;
import org.usfirst.frc103.Cyber103.RobotMap;
import org.usfirst.frc103.Cyber103.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Lift extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController liftController = RobotMap.liftLiftController;
    AnalogPotentiometer analogPot = RobotMap.liftAnalogPot;
    PIDController pID = RobotMap.liftPID;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	//setDefaultCommand(new LiftGeneric());
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    	
    }
    
    public void towerCom(){
    	boolean questionMark;

    }
    
    public void towerStop(){
    	liftController.set(0);
    }
    
    public void autoUpPoint(){
    	if(analogPot.get() <= 0.356){
    		liftController.set(1);
    	}else{
    		liftController.set(0);
    		Robot.towerUpBool = 1;
    	}
    }
    public void autoDownPoint(){
    	double lower = 0.06;
   	    double buffer = 0.05;
   	    double a = 1/buffer;
    	double o = Math.max(0.0, Math.min(1.0, a * (RobotMap.liftAnalogPot.get() - lower)));
    	if(analogPot.get() >= 0.101){
    		liftController.set(-0.3 * o);
    	}else{
    		liftController.set(0);
    		Robot.towerUpBool = 3;
    	}
    }
    
    public void autoUpRCPoint(){
    	if(analogPot.get() >= 0.500){
    		Robot.armGrabber.close();
    	}
    	if(analogPot.get() <= 0.800){
    		liftController.set(0.4);
    	}else{
    		liftController.set(0);
    		Robot.towerUpBool = 1;
    	}
    }
}

